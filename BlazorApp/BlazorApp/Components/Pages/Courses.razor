@page "/courses"
@attribute [StreamRendering]
@attribute [Authorize]



<section class="courses">
    <div class="container">
 <div class="home-course">
        <a class="home-and-course">
        <i class="fa-light fa-house"></i>
        <p class="home">Home</p>
        </a>

        <i class="fa-light fa-angles-right"></i>
        <p class="courses">Courses</p>
        </div>

        <div class="bord">
        <div class="header">
        <h1 class="my5">Courses</h1>
        </div>

        <form class="filters">
        <div class="select">

        <div class="input-search-group">
        <input id="searchQuery" name="searchQuery" placeholder="Search courses">
        <i class="fa-regular fa-search"></i>
        </div>

        <div class="selected">All categories</div>
        <div class="select-options">
        <div class="option" data-value="all">All categories</div>
@*         @if (Model.Categories != null)
        {
        foreach (var category in Model.Categories)
        {
        <div class="option" data-value="@category.CategoryName">@category.CategoryName</div>
        }
        } *@
        </div>
        </div>
        </form>

        </div>

@*  <span class="information">

        @if (ViewData["Status"]?.ToString() == "ConnectionFailed")
        {
        <span class="alert alert-danger">
        Unable to contact the server. Please try again later.
        </span>
        }
        else if (ViewData["Status"]?.ToString() == "Unauthorized")
        {
        <span class="alert alert-danger">
        An error occurred. Please contact web admin.
        </span>
        }
        </span> *@

        @if (courses == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {

            <div class="grid">

                @foreach (var course in courses)
                {
                    @* <NavLink asp-action="Details" asp-controller="Courses" asp-route-id="@course.Id"> *@
                    <NavLink href="@($"courses/{course.Id}")">

                        <div class="course-card">
                            <div class="course-card_img">
                                <img class="img-card" src="@($"images/courses/{course.ImageName}")" alt="Course card">
                                @if (course.IsBestseller)
                                {
                                    <div class="bestseller">
                                        <p>Bestseller</p>
                                    </div>
                                }
                                <form asp-controller="Account" asp-action="SavedCourses" method="post" style="display: inline;">
                                    <input type="hidden" name="courseId" value="@course.Id" />
                                    <button type="submit" class="bookmark" style="border: none; background: none; padding: 0; cursor: pointer;">
                                        <img class="bookmark" src="images/courses/bookmark.svg" alt="bookmark" style="display: block;">

                                    </button>
                                </form>
                            </div>
                            <div class="course-card_body">
                                <h2 class="h5 multi-line-title">@course.Title</h2>
                                <p class="text-s">@course.Author</p>
                                <div class="price">

                                    @if (course.DiscountPrice <= 0)
                                    {
                                        <p class="original-price">$@course.Price</p>
                                    }

                                    @if (course.DiscountPrice > 0)
                                    {

                                        <p class="original-price"></p>
                                        <p class="discounted-price">$@course.DiscountPrice</p>
                                        <p class="discounted-price-line-through">$@course.Price</p>
                                    }
                                </div>

                            </div>
                            <div class="line"></div>
                            <div class="course-card__footer">
                                <div>
                                    <i class="fa-regular fa-clock"></i>
                                    <p>@course.Hours hours</p>
                                </div>
                                <div>
                                    <i class="fa-regular fa-thumbs-up"></i>
                                    <p>
                                        @($"{course.LikesInProcent * 100:0}%")
                                        @($"{course.LikesInNumbers / 1000:N1}K")
                                    </p>
                                </div>
                            </div>
                        </div>
                    </NavLink>

                }

            </div>
        }

        @*         @if (Model.Pagination != null && Model.Pagination.TotalPages > 1)
        {
        <div class="pagination">
        <a class="btn-transparent" href="@Url.Action("Index", new { pageNumber = Model.Pagination.CurrentPage - 1, pageSize = Model.Pagination.PageSize })"><i class="fa-light fa-chevron-left"></i></a>
        @for (int i = 1; i <= Model.Pagination.TotalPages; i++)
        {
        if (i == Model.Pagination.CurrentPage)
        {
        <a class="btn-theme">@i</a>
        }
        else if (i == 1 || i == Model.Pagination.TotalPages)
        {
        <a class="btn-transparent" href="@Url.Action("Index", new { pageNumber = i, pageSize = Model.Pagination.PageSize })">@i</a>
        }
        else
        {
        <a class="btn-gray" href="@Url.Action("Index", new { pageNumber = i, pageSize = Model.Pagination.PageSize })">@i</a>
        }
        }
        <a class="btn-transparent" href="@Url.Action("Index", new { pageNumber = Model.Pagination.CurrentPage + 1, pageSize = Model.Pagination.PageSize })"><i class="fa-light fa-chevron-right"></i></a>
        </div>
        } *@


        <div class="banner">
            <div class="banner-text">
                <p class="text-l">Ready to get started?</p>
                <div>
                    <div class="skills-text"><h2 class="h2">Take Your </h2><h2 class="h2 blue"> Skills </h2> <h2 class="h2">to the</h2></div><div><h2 class="h2"> Next Level</h2></div>
                </div>
                <a class="btn-theme" href="#">Work with us</a>
            </div>
            <div class="banner-img">
                <img src="images/courses/Banner.svg" alt="banner">
            </div>
        </div>

    </div>
</section>


@code {
    private CourseModel[]? courses;
    protected override async Task OnInitializedAsync()
    {
       try
        {
            await Task.Delay(500);
            courses = await Http.GetFromJsonAsync<CourseModel[]>("https://localhost:7026/api/Courses");
        }
        catch (Exception)
        {
            // ViewData["Status"] = "ConnectionFailed";
        }
    }

    public class CourseModel
    {
        public int Id { get; set; }
        public string Title { get; set; } = null!;
        public decimal Price { get; set; }
        public decimal DiscountPrice { get; set; }
        public int Hours { get; set; }
        public bool IsBestseller { get; set; }
        public decimal LikesInNumbers { get; set; }
        public decimal LikesInProcent { get; set; }
        public string? Author { get; set; }
        public string? ImageName { get; set; }
        public string Category { get; set; } = null!;
    }

}